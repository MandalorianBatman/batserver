name: infra
services:
  cloudflare-tunnel:
    container_name: cloudflare_tunnel
    networks:
      - batserver_docker_network
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    restart: always
    environment:
      - TZ=${TZ:-Asia/Kolkata}
    extra_hosts:
      - "host.docker.internal:host-gateway"

  portainer:
    image: portainer/portainer-ce:lts
    container_name: portainer
    restart: always
    ports:
      - "8000:8000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - batserver_docker_network
    environment:
      - TZ=${TZ:-Asia/Kolkata}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.kasat.work`)"
      - "traefik.http.routers.portainer.entrypoints=web,websecure"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
  
  # nginx-proxy:
  #   container_name: nginx-proxy
  #   image: 'jc21/nginx-proxy-manager:latest'
  #   restart: unless-stopped
  #   ports:
  #     - '80:80'
  #     - '443:443'
  #     - '81:81'
  #   environment:
  #     - PUID=0
  #     - PGID=0
  #     - TZ=${TZ:-Asia/Kolkata}
  #   networks:
  #     - batserver_docker_network
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   volumes:
  #     - /tank/container_configs/nginx-proxy/data:/data
  #     - /tank/container_configs/nginx-proxy/letsencrypt:/etc/letsencrypt
      
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=${TZ:-Asia/Kolkata}
      
  netbird:
    image: netbirdio/netbird:latest
    container_name: ${NETBIRD_PEER_NAME:-batserver}
    hostname: ${NETBIRD_PEER_NAME:-batserver}
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - SYS_RESOURCE
    environment:
      - NB_SETUP_KEY=${NETBIRD_SETUP_KEY}
      - TZ=${TZ:-Asia/Kolkata}
    volumes:
      - netbird-client:/etc/netbird
    restart: unless-stopped
    networks:
      - batserver_docker_network
  autoheal:
    deploy:
      replicas: 1
    environment:
      AUTOHEAL_CONTAINER_LABEL: all
    image: willfarrell/autoheal:latest
    network_mode: none
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
  
  traefik:
    container_name: traefik
    image: traefik:latest
    networks:
      - batserver_docker_network
    command:
      # Dashboard
      - "--api=true"
      - "--api.dashboard=true"
      - "--api.insecure=true"  # Allow access to dashboard without auth at :8080/dashboard/
      # Docker provider
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # File provider for static config
      - "--providers.file.directory=/etc/traefik/dynamic_conf"
      # Entry points
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # Let's Encrypt
      - "--certificatesresolvers.letsencrypt.acme.email=sid.kasat@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
    ports:
      - "80:80"
      - "443:443"
      # Dashboard port with original port mapping
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /tank/container_configs/traefik/acme:/etc/traefik/acme
      - /tank/container_configs/traefik/dynamic_conf:/etc/traefik/dynamic_conf
    labels:
      - "traefik.enable=true"
      # Dashboard accessible via hostname (optional)
      - "traefik.http.routers.traefik.rule=Host(`traefik.kasat.work`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
    restart: unless-stopped
    environment:
      - TZ=${TZ:-Asia/Kolkata}
  
  whoami:
    # Test container
    image: traefik/whoami
    networks:
      - batserver_docker_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.kasat.work`)"
      - "traefik.http.routers.whoami.entrypoints=web,websecure"

networks:
  batserver_docker_network:
    name: batserver_docker_network
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24

volumes:
  portainer_data:
  netbird-client:
