name: immich
services:
  immich-server:
    container_name: immich_server
    networks:
      - batserver_docker_network
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tank/immich/external:/imports/external
      - /tank/immich/uploads:/usr/src/app/upload
    env_file:
      - .env
    environment:
      - TZ=${TZ:-Asia/Kolkata}
    ports:
      - "2283:2283"
    depends_on:
      - redis
      - database
    restart: always
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich_machine_learning
    networks:
      - batserver_docker_network
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    environment:
      - TZ=${TZ:-Asia/Kolkata}
    restart: always
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    networks:
      - batserver_docker_network
    image: docker.io/redis:6.2-alpine@sha256:148bb5411c184abd288d9aaed139c98123eeb8824c5d3fce03cf721db58066d8
    environment:
      - TZ=${TZ:-Asia/Kolkata}
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  database:
    container_name: immich_postgres
    networks:
      - batserver_docker_network
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: "--data-checksums"
      TZ: ${TZ:-Asia/Kolkata}
    volumes:
      - /tank/database/immich:/var/lib/postgresql/data
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1;
        Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align
        --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
        echo "checksum failure count is $$Chksum";
        [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$$user", public, vectors'
      -c logging_collector=on
      -c max_wal_size=2GB
      -c shared_buffers=512MB
      -c wal_compression=on
    restart: always
  
  nextcloud:
    image: lscr.io/linuxserver/nextcloud:latest
    container_name: nextcloud
    volumes:
      - /tank/nextcloud/config:/config
      - /tank/nextcloud/data:/data
      - /tank/arr/data/media/tv:/tv
      - /tank/arr/data/media/movies:/movies
    ports:
      - 7443:443
    networks:
      - batserver_docker_network
    environment:
      - TZ=${TZ:-Asia/Kolkata}
    restart: unless-stopped

networks:
  batserver_docker_network:
    name: batserver_docker_network
    external: true

volumes:
  model-cache:
